# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  imageName: 'pipelines-javascript-docker'

steps:
- task: Docker@2
  displayName: Build an image
  inputs:
    repository: $(imageName)
    command: build
    Dockerfile: app/Dockerfile
- task: UniversalPackages@0
  inputs:
    command: 'download'
    downloadDirectory: '$(System.DefaultWorkingDirectory)'
    feedsToUse: 'internal'
    vstsFeed: '8810dc24-af07-43fa-a506-de5fe945f20e'
    vstsFeedPackage: '200cae98-bc0b-45a1-b539-e4a6932fb351'
    vstsPackageVersion: '19.11.506'
- task: CmdLine@2
  inputs:
    script: |
      sudo mv $(System.DefaultWorkingDirectory)/twistcli /usr/bin/twistcli
      sudo chmod +x /usr/bin/twistcli
- task: prisma-cloud-compute-scan@1
  inputs:
    scanType: 'images'
    twistlockService: 'prisma_cloud_container_scanner'
    vulnerabilityThreshold: 'high'
    onlyFixed: false
    gracePeriod: '0'
    complianceThreshold: 'high'
    artifact: '$(imageName):$(Build.BuildId)'
