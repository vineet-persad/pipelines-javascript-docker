# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '1c6a56e5-0eff-4c4e-98d9-d836ca1f079f'
  imageRepository: 'vineetpersadpipelinesjavascriptdocker'
  containerRegistry: 'vpersadacrdemobuild.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/app/Dockerfile'
  tag: '$(Build.BuildId)'
  imageName: 'pipelines-javascript-docker'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
- task: UniversalPackages@0
  inputs:
    command: 'download'
    downloadDirectory: '$(System.DefaultWorkingDirectory)'
    feedsToUse: 'internal'
    vstsFeed: '8810dc24-af07-43fa-a506-de5fe945f20e'
    vstsFeedPackage: '200cae98-bc0b-45a1-b539-e4a6932fb351'
    vstsPackageVersion: '19.7.863'
- task: CmdLine@2
  inputs:
    script: |
      sudo mv $(System.DefaultWorkingDirectory)/twistcli /usr/bin/twistcli
      sudo chmod +x /usr/bin/twistcli
- task: twistcli-scan@1
  inputs:
    scanType: 'images'
    twistlockService: 'Twistlock'
    vulnerabilityThreshold: 'high'
    onlyFixed: false
    gracePeriod: '0'
    complianceThreshold: 'high'
    artifact: '$(imageName):$(Build.BuildId)'
